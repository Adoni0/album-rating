{"ast":null,"code":"var _jsxFileName = \"/Users/adamsoudani/Desktop/album-rating/components/MediaCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from \"react-multi-carousel\";\nimport AlbumRatings from './AlbumRatings';\nimport albumdb from '../models/index';\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 3,\n    slidesToSlide: 3 // optional, default to 1.\n\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 2,\n    slidesToSlide: 2 // optional, default to 1.\n\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 370,\n    margin: 'auto'\n  },\n  media: {\n    height: 200\n  }\n}));\nexport function Pony(props) {\n  const {\n    albums\n  } = props; // console.log(albums)\n\n  var sort = albums.filter(function (album) {\n    return album.collectionName;\n  });\n  console.log(sort);\n  return __jsx(Carousel, {\n    swipeable: true,\n    draggable: false,\n    showDots: true,\n    responsive: responsive,\n    ssr: true // means to render carousel on server-side.\n    ,\n    infinite: true,\n    autoplay: true,\n    autoPlaySpeed: 2000 // autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\n    // autoPlaySpeed={1000}\n    ,\n    keyBoardControl: true,\n    customTransition: \"all .5\",\n    transitionDuration: 500,\n    containerClass: \"carousel-container\",\n    removeArrowOnDeviceType: [\"tablet\", \"mobile\"] // deviceType={this.props.deviceType}\n    ,\n    dotListClass: \"custom-dot-list-style\",\n    itemClass: \"carousel-item-padding-40-px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, sort.map((item, i) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(MediaCard, {\n    key: i,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }))));\n}\nexport function MediaCard(props) {\n  const classes = useStyles();\n  const {\n    item\n  } = props;\n\n  function handleQueueClick(id) {// if(item.collectionId === id){\n    //   albumdb.create({\n    //     albumName: item.collectionName,\n    //     albumArtistName: item.artistName,\n    //     albumCoverArt: item.artworkUrl100       \n    //   }).then(data => console.log(data, 'was entered'))\n    // }\n    // console.log('collectionId: ',id)\n  }\n\n  return __jsx(Card, {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: item.artworkUrl100,\n    title: \"music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, item.collectionName), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, item.artistName), __jsx(AlbumRatings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => handleQueueClick(item.collectionId),\n    size: \"small\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Queue\"), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    href: item.collectionViewUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Preview\"))));\n}","map":{"version":3,"sources":["/Users/adamsoudani/Desktop/album-rating/components/MediaCard.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Carousel","AlbumRatings","albumdb","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","useStyles","theme","root","maxWidth","margin","media","height","Pony","props","albums","sort","filter","album","collectionName","console","log","map","item","i","MediaCard","classes","handleQueueClick","id","backgroundColor","artworkUrl100","artistName","collectionId","collectionViewUrl"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADL;AAEPC,IAAAA,KAAK,EAAE,CAFA;AAGPC,IAAAA,aAAa,EAAE,CAHR,CAGU;;AAHV,GADQ;AAMjBC,EAAAA,MAAM,EAAE;AACNL,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADN;AAENC,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,aAAa,EAAE,CAHT,CAGW;;AAHX,GANS;AAWjBE,EAAAA,MAAM,EAAE;AACNN,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KADN;AAENC,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,aAAa,EAAE,CAHT,CAGW;;AAHX;AAXS,CAAnB;AAkBA,MAAMG,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADiC;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AALgC,CAAZ,CAAD,CAA5B;AAUA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CAD0B,CAE1B;;AAEA,MAAIE,IAAI,GAAGD,MAAM,CAACE,MAAP,CAAc,UAAUC,KAAV,EAAiB;AAExC,WAAOA,KAAK,CAACC,cAAb;AACD,GAHU,CAAX;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,SACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,UAAU,EAAEnB,UAJd;AAKE,IAAA,GAAG,EAAE,IALP,CAKa;AALb;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,QAAQ,EAAE,IAPZ;AAQE,IAAA,aAAa,EAAE,IARjB,CASE;AACA;AAVF;AAWE,IAAA,eAAe,EAAE,IAXnB;AAYE,IAAA,gBAAgB,EAAC,QAZnB;AAaE,IAAA,kBAAkB,EAAE,GAbtB;AAcE,IAAA,cAAc,EAAC,oBAdjB;AAeE,IAAA,uBAAuB,EAAE,CAAC,QAAD,EAAW,QAAX,CAf3B,CAgBE;AAhBF;AAiBE,IAAA,YAAY,EAAC,uBAjBf;AAkBE,IAAA,SAAS,EAAC,6BAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBImB,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAmB,IAAA,IAAI,EAAED,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,CArBJ,CADF;AA8BD;AAGD,OAAO,SAASE,SAAT,CAAmBX,KAAnB,EAA0B;AAC/B,QAAMY,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAWT,KAAjB;;AAEA,WAASa,gBAAT,CAA0BC,EAA1B,EAA6B,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAA2C,IAAA,SAAS,EAAEH,OAAO,CAAClB,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAEkB,OAAO,CAACf,KADrB;AAEE,IAAA,KAAK,EAAEY,IAAI,CAACO,aAFd;AAGE,IAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACJ,cADR,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACQ,UADR,CAJF,EAOE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CANF,CADF,EAiBE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACJ,IAAI,CAACS,YAAN,CAAvC;AAA4D,IAAA,IAAI,EAAC,OAAjE;AAAyE,IAAA,KAAK,EAAC,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,MAAM,EAAC,QAAV;AAAmB,IAAA,IAAI,EAAET,IAAI,CAACU,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,CAjBF,CADF;AA4BD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from \"react-multi-carousel\";\nimport AlbumRatings from './AlbumRatings';\nimport albumdb from '../models/index';\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n    slidesToSlide: 3 // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 2 // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 370,\n    margin: 'auto'\n  },\n  media: {\n    height: 200,\n  },\n}));\n\nexport function Pony(props) {\n  const { albums } = props;\n  // console.log(albums)\n\n  var sort = albums.filter(function (album) {\n\n    return album.collectionName\n  })\n  console.log(sort)\n\n  return (\n    <Carousel\n      swipeable={true}\n      draggable={false}\n      showDots={true}\n      responsive={responsive}\n      ssr={true} // means to render carousel on server-side.\n      infinite={true}\n      autoplay={true}\n      autoPlaySpeed={2000}\n      // autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\n      // autoPlaySpeed={1000}\n      keyBoardControl={true}\n      customTransition=\"all .5\"\n      transitionDuration={500}\n      containerClass=\"carousel-container\"\n      removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n      // deviceType={this.props.deviceType}\n      dotListClass=\"custom-dot-list-style\"\n      itemClass=\"carousel-item-padding-40-px\"\n    >\n      {\n        sort.map((item, i) => \n        <div>\n        <MediaCard key={i} item={item} />\n        </div>\n        )\n      }\n    </Carousel>\n  )\n}\n\n\nexport function MediaCard(props) {\n  const classes = useStyles();\n  const { item } = props;\n\n  function handleQueueClick(id){\n    // if(item.collectionId === id){\n    //   albumdb.create({\n    //     albumName: item.collectionName,\n    //     albumArtistName: item.artistName,\n    //     albumCoverArt: item.artworkUrl100       \n    //   }).then(data => console.log(data, 'was entered'))\n    // }\n    \n    // console.log('collectionId: ',id)\n  }\n\n  return (\n    <Card style={{ backgroundColor: 'white' }} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={item.artworkUrl100}\n          title=\"music\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {item.collectionName}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {item.artistName}\n          </Typography>\n          <AlbumRatings />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button onClick={() => handleQueueClick(item.collectionId)} size=\"small\" color=\"secondary\">\n          Queue\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          <a target=\"_blank\" href={item.collectionViewUrl}>Preview</a>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}