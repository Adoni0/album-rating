{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/adamsoudani/Desktop/album-rating/components/TemporaryDrawer.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport MusicVideoIcon from '@material-ui/icons/MusicVideo';\nimport Link from 'next/link';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function TemporaryDrawer(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      drawer = _useState[0],\n      setDrawer = _useState[1];\n\n  var toggleDrawer = function toggleDrawer(open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setDrawer(open);\n    };\n  };\n\n  var list = function list(anchor) {\n    return __jsx(\"div\", {\n      className: clsx(classes.list, _defineProperty({}, classes.fullList, anchor === 'bottom')),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, __jsx(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, __jsx(PlayCircleFilledIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }\n    })), __jsx(ListItemText, {\n      primary: props.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    })), __jsx(ListItem, {\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(MusicVideoIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }\n    })), __jsx(ListItemText, {\n      primary: 'Rock MusicVideos',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), __jsx(ListItem, {\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(ExitToAppIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }\n    })), __jsx(ListItemText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: '/',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Back to Home\"))))), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: toggleDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(AlbumIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 85\n    }\n  })), __jsx(Drawer, {\n    anchor: \"bottom\",\n    open: drawer,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, list('bottom')));\n}\n\n_s(TemporaryDrawer, \"jBQZrsXBRo2LWu8wXxcQdUDvbpM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemporaryDrawer\");","map":{"version":3,"sources":["/Users/adamsoudani/Desktop/album-rating/components/TemporaryDrawer.js"],"names":["React","useState","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","PlayCircleFilledIcon","ExitToAppIcon","AlbumIcon","MusicVideoIcon","Link","useStyles","list","width","fullList","TemporaryDrawer","props","classes","drawer","setDrawer","toggleDrawer","open","event","type","key","anchor","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport MusicVideoIcon from '@material-ui/icons/MusicVideo';\nimport Link from 'next/link'\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer(props) {\n\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDrawer(open);\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      \n      <List>\n          <ListItem button>\n            <ListItemIcon><PlayCircleFilledIcon /></ListItemIcon>\n            <ListItemText primary={props.name} />\n          </ListItem>\n\n          <ListItem button>\n            <ListItemIcon><MusicVideoIcon /></ListItemIcon>\n            <ListItemText primary={'Rock MusicVideos'} />\n          </ListItem>\n\n          <ListItem button>\n            <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n            <ListItemText>\n              <Link href={'/'}>\n              <a>Back to Home</a>\n              </Link>\n            </ListItemText>\n          </ListItem>\n        \n      </List>\n      <Divider />\n      \n    </div>\n  );\n\n  return (\n    <div>\n      \n          <Button variant=\"outlined\" color=\"secondary\" onClick={toggleDrawer(true)}><AlbumIcon /></Button>\n          <Drawer anchor='bottom' open={drawer} onClose={toggleDrawer(false)}>\n            {list('bottom')}\n          </Drawer>\n        \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}