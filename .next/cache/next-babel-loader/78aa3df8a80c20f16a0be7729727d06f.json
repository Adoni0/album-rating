{"ast":null,"code":"var _jsxFileName = \"/Users/adamsoudani/Desktop/album-rating/components/VideoCarousel/VidItem.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n});\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nexport default function SingleLineGridList() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 2.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, tileData.map(function (tile) {\n    return __jsx(GridListTile, {\n      key: tile.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), __jsx(GridListTileBar, {\n      title: tile.title,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"star \".concat(tile.title),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, __jsx(StarBorderIcon, {\n        className: classes.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\n\n_s(SingleLineGridList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SingleLineGridList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleLineGridList\");","map":{"version":3,"sources":["/Users/adamsoudani/Desktop/album-rating/components/VideoCarousel/VidItem.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","classes","map","tile","img"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAGP,UAAU,CAAC,UAACQ,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,cAAc,EAAE,cAHZ;AAIJC,MAAAA,QAAQ,EAAE,QAJN;AAKJC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,KADiC;AAQvCC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,QAAQ,EAAE,QADF;AAER;AACAQ,MAAAA,SAAS,EAAE;AAHH,KAR6B;AAavCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AADxB,KAbgC;AAgBvCC,IAAAA,QAAQ,EAAE;AACRR,MAAAA,UAAU,EACR;AAFM;AAhB6B,GAAZ;AAAA,CAAD,CAA5B;AAsBA;;;;;;;;;;;;;;;;;;AAiBA,eAAe,SAASS,kBAAT,GAA8B;AAAA;;AAAA;;AAC3C,MAAMC,OAAO,GAAGnB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEmB,OAAO,CAACjB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEiB,OAAO,CAACR,QAA7B;AAAuC,IAAA,IAAI,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QAAQ,CAACqB,GAAT,CAAa,UAACC,IAAD;AAAA,WACZ,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACC,GAAf;AAAoB,MAAA,GAAG,EAAED,IAAI,CAACR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,eAAD;AACE,MAAA,KAAK,EAAEQ,IAAI,CAACR,KADd;AAEE,MAAA,OAAO,EAAE;AACPX,QAAAA,IAAI,EAAEiB,OAAO,CAACF,QADP;AAEPJ,QAAAA,KAAK,EAAEM,OAAO,CAACN;AAFR,OAFX;AAME,MAAA,UAAU,EACR,MAAC,UAAD;AAAY,qCAAoBQ,IAAI,CAACR,KAAzB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AAAgB,QAAA,SAAS,EAAEM,OAAO,CAACN,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADY;AAAA,GAAb,CADH,CADF,CADF;AAuBD;;GA1BuBK,kB;UACNlB,S;;;KADMkB,kB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}