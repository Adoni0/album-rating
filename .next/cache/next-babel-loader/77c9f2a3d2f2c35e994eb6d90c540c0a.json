{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/adamsoudani/Desktop/sport-hub/pages/TemporaryDrawer.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function TemporaryDrawer() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      drawer = _useState[0],\n      setDrawer = _useState[1];\n\n  var toggleDrawer = function toggleDrawer(open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setDrawer(open);\n    };\n  };\n\n  var list = function list(anchor) {\n    return __jsx(\"div\", {\n      className: clsx(classes.list, _defineProperty({}, classes.fullList, anchor === 'bottom')),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, __jsx(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, ['NFL Articles', 'NFL Videos', 'Sign Out', 'Back to Home'].map(function (text, index) {\n      return __jsx(ListItem, {\n        button: true,\n        key: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, __jsx(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, index % 2 === 0 ? __jsx(InboxIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 46\n        }\n      }) : __jsx(MailIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 62\n        }\n      })), __jsx(ListItemText, {\n        primary: text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }));\n    })), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: toggleDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Bottom\"), __jsx(Drawer, {\n    anchor: \"bottom\",\n    open: drawer,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, list('bottom')));\n}\n\n_s(TemporaryDrawer, \"jBQZrsXBRo2LWu8wXxcQdUDvbpM=\", false, function () {\n  return [useStyles];\n});\n\n_c = TemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemporaryDrawer\");","map":{"version":3,"sources":["/Users/adamsoudani/Desktop/sport-hub/pages/TemporaryDrawer.js"],"names":["React","useState","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useStyles","list","width","fullList","TemporaryDrawer","classes","drawer","setDrawer","toggleDrawer","open","event","type","key","anchor","map","text","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,IAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,KAAK,EAAE;AADC;AAJiB,CAAD,CAA5B;AASA,eAAe,SAASE,eAAT,GAA2B;AAAA;;AAAA;;AACxC,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADwC,kBAEZZ,QAAQ,CAAC,KAAD,CAFI;AAAA,MAEjCkB,MAFiC;AAAA,MAEzBC,SAFyB;;AAIxC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,WAAU,UAACC,KAAD,EAAW;AACxC,UAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD;;AAEDL,MAAAA,SAAS,CAACE,IAAD,CAAT;AACD,KANoB;AAAA,GAArB;;AAQA,MAAMR,IAAI,GAAG,SAAPA,IAAO,CAACY,MAAD;AAAA,WACX;AACE,MAAA,SAAS,EAAExB,IAAI,CAACgB,OAAO,CAACJ,IAAT,sBACZI,OAAO,CAACF,QADI,EACOU,MAAM,KAAK,QADlB,EADjB;AAIE,MAAA,IAAI,EAAC,cAJP;AAKE,MAAA,OAAO,EAAEL,YAAY,CAACK,MAAD,EAAS,KAAT,CALvB;AAME,MAAA,SAAS,EAAEL,YAAY,CAACK,MAAD,EAAS,KAAT,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,cAAD,EAAiB,YAAjB,EAA+B,UAA/B,EAA2C,cAA3C,EAA2DC,GAA3D,CAA+D,UAACC,IAAD,EAAOC,KAAP;AAAA,aAC9D,MAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GAAkC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,CADF,EAEE,MAAC,YAAD;AAAc,QAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAD8D;AAAA,KAA/D,CADH,CARF,EAgBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADW;AAAA,GAAb;;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGM,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,YAAY,CAAC,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,EAIM,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAEF,MAA9B;AAAsC,IAAA,OAAO,EAAEE,YAAY,CAAC,KAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAAC,QAAD,CADP,CAJN,CADF;AAYD;;GA9CuBG,e;UACNJ,S;;;KADMI,e","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false)\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDrawer(open);\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['NFL Articles', 'NFL Videos', 'Sign Out', 'Back to Home'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      \n    </div>\n  );\n\n  return (\n    <div>\n      {/* {['left', 'right', 'top', 'bottom'].map((anchor) => (\n        <React.Fragment key={anchor}> */}\n          <Button onClick={toggleDrawer(true)}>Bottom</Button>\n          <Drawer anchor='bottom' open={drawer} onClose={toggleDrawer(false)}>\n            {list('bottom')}\n          </Drawer>\n        {/* </React.Fragment>\n      ))} */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}